//--- OBJECT WRITE BEGIN ---
new GuiControl(DTSExporter) {
   profile = "GuiContentProfile";
   horizSizing = "width";
   vertSizing = "height";
   position = "0 0";
   extent = "800 600";
   minExtent = "450 400";
   visible = "1";
      helpTag = "0";

   new GuiBitmapCtrl(DTSExporterBitmapBackground) {
      profile = "GuiDefaultProfile";
      horizSizing = "relative";
      vertSizing = "relative";
      position = "0 0";
      extent = "800 600";
      minExtent = "8 2";
      visible = "1";
      bitmap = "./hudfill.png";
      wrap = "1";
         helpTag = "0";

      new GuiColouredBox(ViewerColouredBackground) {
         profile = "GuiDefaultProfile";
         horizSizing = "width";
         vertSizing = "height";
         position = "103 41";
         extent = "694 497";
         minExtent = "8 2";
         visible = "1";
         color = "168 168 168 255";
         color2 = "0 0 0 255";
         opaque = "1";
         gradientDir = "0";

         new GuiChunkedBitmapCtrl(ViewerBitmapBackground) {
            profile = "GuiDefaultProfile";
            horizSizing = "width";
            vertSizing = "height";
            position = "0 0";
            extent = "694 497";
            minExtent = "8 2";
            visible = "1";
            useVariable = "0";
            tile = "0";

            new GuiObjectView2(objectViewerGUI) {
               profile = "GuiObjectViewerProfile";
               horizSizing = "width";
               vertSizing = "height";
               position = "-1 0";
               extent = "694 497";
               minExtent = "8 2";
               visible = "1";
               cameraZRot = "0";
               forceFOV = "0";
               displayFOV = "51.4271";
               showNode = "-1";
               renderNodeVertices = "0";
               nodeVertex0Color = "255 0 0 255";
               nodeVertex1Color = "255 255 0 255";
               showAllNodes = "0";
               nodeDrawType = "1";
               showObject = "-1";
               objDisplayType = "1";
               enableLights = "1";
               solidBoundingBox = "1";
               collisionMeshes = "0";
               losCollisionMeshes = "0";
               enableGrid = "1";
               gridType = "3";
               gridSize = "0.1";
               showRTAxis = "1";
               invertMouseRotation = "0";
               drawMountedObjects = "1";
               lightRotation = "0.418879 0 3.36849";
               lightColor = "255 255 255 255";
               ambientColor = "85 85 85 255";
               lightDisplayDist = "1.5";
               threadTransition = "0";
               threadTransitionDuration = "0.2";
               nodeAxisColor = "255 255 0 255";
               nodeConnectionColor = "128 128 255 255";
               boldAnimatedNodes = "1";
               nodeAnimatedColor = "255 255 0 255";
               tristripBias = "0";
               showSortedMeshOrder = "0";
               meshFade = "0";
               meshFadeAmount = "0.5";
                  renderNodeMethod = "1";
                  helpTag = "0";
                  lightDirection = "-0.57735 -0.57735 -0.57735";
                  LODControl = "1";

               new GuiObjectHudCtrl(objectHudGUI) {
                  profile = "GuiBorderProfile";
                  horizSizing = "width";
                  vertSizing = "height";
                  position = "0 0";
                  extent = "694 497";
                  minExtent = "8 2";
                  visible = "1";
                  showFPS = "0";
                  showGridSize = "1";
                  showLOD = "1";
                  showBillboard = "0";
                  showFOV = "0";
                  hudPosition = "0";
                  hudTextColor = "0 0 0 255";
               };
            };
         };
      };
      new GuiControl() {
         profile = "GuiViewerBarProfile";
         horizSizing = "width";
         vertSizing = "bottom";
         position = "103 25";
         extent = "694 18";
         minExtent = "8 2";
         visible = "1";
      };
      new GuiButtonCtrl(quitButton) {
         profile = "GuiButtonProfileBlue";
         horizSizing = "right";
         vertSizing = "top";
         position = "0 580";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "stopExporter();";
         text = "Quit";
         groupNum = "-1";
         buttonType = "PushButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Close TST Pro";
      };
      new GuiControl() {
         profile = "GuiBorderProfile";
         horizSizing = "right";
         vertSizing = "relative";
         position = "100 0";
         extent = "3 600";
         minExtent = "1 1";
         visible = "1";
            helpTag = "0";
      };
      new GuiButtonCtrl(dispMountButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 145";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleMOWindow();";
         text = "Mount Objects";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Object-to-Node Mounting Window...";
      };
      new GuiPopUpMenuCtrl(clearObjectsPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 0";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         text = "Clear";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Clear Current or All Objects Popup...";
      };
      new GuiButtonCtrl(loadDTSButton) {
         profile = "GuiButtonProfileBlue";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 50";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "exporterGetLoadFilename(\"*.dts\", exporterLoadObject);";
         text = "Load DTS";
         groupNum = "-1";
         buttonType = "PushButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open DTS File from Current Project Directory...";
      };
      new GuiPopUpMenuCtrl(objDisplayType) {
         profile = "GuiPopUpMenuProfileGray";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "191 26";
         extent = "122 16";
         minExtent = "8 2";
         visible = "1";
         text = "Display";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Object Rendering Mode Popup...";
      };
      new GuiButtonCtrl(loadCSButton) {
         profile = "GuiButtonProfileBlue";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 65";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "exporterGetLoadFilename(\"*.dts\", exporterLoadObjectCS);";
         text = "Load DTS & CS";
         groupNum = "-1";
         buttonType = "PushButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open DTS with Optional CS Files from Current Project Directory...";
      };
      new GuiButtonCtrl(loadDSQButton) {
         profile = "GuiButtonProfileBlue";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 80";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "exporterLoadObjectDSQ();";
         text = "Load DSQ";
         groupNum = "-1";
         buttonType = "PushButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open DSQ File into Viewed Object from Current Project Directory...";
      };
      new GuiPopUpMenuCtrl(helpPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 30";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         text = "Help";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "TST Pro Help Files and on the Web...";
      };
      new GuiPopUpMenuCtrl(loadRecentPopup) {
         profile = "GuiPopUpMenuProfileBlue";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 95";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         text = "Load Recent";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Recent DTS Files Popup...";
      };
      new GuiTextCtrl(objectListLabel) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "130 577";
         extent = "40 18";
         minExtent = "8 2";
         visible = "1";
         text = "Objects:";
         maxLength = "255";
            helpTag = "0";
      };
      new GuiPopUpMenuCtrl(objectList) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "175 578";
         extent = "150 16";
         minExtent = "8 2";
         visible = "1";
         text = "Objects";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "List of Objects in Current DTS...";
      };
      new GuiTextCtrl(nodeListLabel) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "362 577";
         extent = "34 18";
         minExtent = "8 2";
         visible = "1";
         text = "Nodes:";
         maxLength = "255";
            helpTag = "0";
      };
      new GuiPopUpMenuCtrl(nodeList) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "400 578";
         extent = "150 16";
         minExtent = "8 2";
         visible = "1";
         text = "Nodes";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "List of Nodes in Current DTS...";
      };
      new GuiButtonCtrl(dispSeqButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 180";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleSequenceWindow();";
         text = "Sequence Info";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Animation Sequence Information Window...";
      };
      new GuiButtonCtrl(dispPropertiesButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 115";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleDPWindow();";
         text = "Display Properties";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open TST Pro Display Properties Window...";
      };
      new GuiPopUpMenuCtrl(sequenceListPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "175 545";
         extent = "150 16";
         minExtent = "8 2";
         visible = "1";
         text = "Sequences";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "List of Animation Sequences in Current DTS...";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "112 544";
         extent = "58 18";
         minExtent = "8 2";
         visible = "1";
         text = "Sequences:";
         maxLength = "255";
      };
      new GuiAnimSliderCtrl(sequenceTimeSlider) {
         profile = "GuiAnimSliderProfile";
         horizSizing = "width";
         vertSizing = "top";
         position = "349 544";
         extent = "448 24";
         minExtent = "100 24";
         visible = "1";
         command = "sequenceTimeSlider.clicked();";
         altCommand = "sequenceTimeSlider.dragged();";
         range = "0.000000 1.000000";
         ticks = "9";
         value = "0";
         thumbsize = "48 16";
         miniSlider = "0";
         coloredSlider = "0";
      };
      new GuiPopUpMenuCtrl(selectedObjectPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "619 4";
         extent = "175 16";
         minExtent = "8 2";
         visible = "1";
         text = "No Object";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "List of Currently Opened DTS Files...";
      };
      new GuiButtonCtrl(dispMaterialsButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 210";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleMLWindow();";
         text = "Material List";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open DTS Materials Window...";
      };
      new GuiButtonCtrl(dispLODButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 225";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleLODWindow();";
         text = "Detail Levels";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Levels of Detail Window...";
      };
      new GuiBitmapButtonCtrl(MouseControlCamera) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "558 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setMouseControlState(0);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./MouseControlsCamera";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mouse Controls Camera Rotation, Translation and Zoom";
      };
      new GuiItemCoordCtrl(ItemCoords) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "5 440";
         extent = "90 131";
         minExtent = "8 2";
         visible = "1";
         maxLength = "255";
         lockBitmap = "./lock";
      };
      new GuiBitmapButtonCtrl(sequenceRewind) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "607 574";
         extent = "30 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(3);";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./Rewind";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Rewind Current Animation Sequence to Beginning";
      };
      new GuiBitmapButtonCtrl(TBColMesh) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "264 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::collisionMeshes";
         command = "objectViewerGUI.setCollisionMeshesState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./Collision";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Display Object Collision Mesh as Translucent Blue";
      };
      new GuiBitmapButtonCtrl(sequencePlayBackwards) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "639 574";
         extent = "30 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(2);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./PlayBack";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Play Current Animation Sequence Backwards";
      };
      new GuiBitmapButtonCtrl(TBSolidBoundingBox) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "308 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::solidBoundingBox";
         command = "objectViewerGUI.setBoundingBoxState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./BoundingBox";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Display Object Bounding Box as Translucent Red";
      };
      new GuiBitmapButtonCtrl(MouseControlLight) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "580 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setMouseControlState(1);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./MouseControlsLight";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mouse Controls Directional Light Rotation";
      };
      new GuiBitmapButtonCtrl(TBEnableLights) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "430 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::enableLights";
         command = "objectViewerGUI.setLightsState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./EnableLights";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Directional Lighting";
      };
      new GuiBitmapButtonCtrl(TBEMap) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "474 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setEMapDisplayState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./EMap";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Environment Mapping Using Selected Image in Display Preferences";
      };
      new GuiPopUpMenuCtrl(itemCoordPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "0 420";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         text = "Node Wrld Coord";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Select Items Coordinates Display Type";
      };
      new GuiBitmapButtonCtrl(sequencePause) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "671 574";
         extent = "30 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(0);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./Pause";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Pause Current Animation Sequence";
      };
      new GuiBitmapButtonCtrl(sequencePlay) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "703 574";
         extent = "30 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(1);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./Play";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Play Current Animation Sequence Forwards";
      };
      new GuiTextEditCtrl(sequenceTimeScaleEdit) {
         profile = "GuiTextEditProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "767 574";
         extent = "30 18";
         minExtent = "8 2";
         visible = "1";
         text = "1.0";
         maxLength = "255";
         validate = "objectViewerGUI.setSeqTimeScale();";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Change Animation Sequence Playback Rate (>1.0 is Faster)";
      };
      new GuiBitmapButtonCtrl(TBDetailLock) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "236 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::LODControl";
         command = "objectViewerGUI.setLODControl();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./DetailLock";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Lock to Current Level of Detail";
      };
      new GuiBitmapButtonCtrl(TBMipLock) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "214 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::clampMaxMipMap";
         command = "objectViewerGUI.setMaxMipMapLOD();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./MipLock";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Lock to Current Mip Map Level";
      };
      new GuiButtonCtrl(dispThreadButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 195";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleThreadWindow();";
         text = "Thread Controls";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Animation Thread Window...";
      };
      new GuiBitmapButtonCtrl(TBTransitionSeq) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "502 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::threadTransition";
         command = "objectViewerGUI.setThreadTransition();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./Transition";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Timed Transition Between Animation Sequences (Settings on Thread Controls Window)";
      };
      new GuiBitmapButtonCtrl(TBTextureFlush) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "186 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         command = "MWFlushCheckbox.setValue(TBTextureFlush.getValue()); objectViewerGUI.flushTextureCacheSchedule();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./TextureFlush";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Timed Texture Reloading";
      };
      new GuiPopUpMenuCtrl(projectDirectoryPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 15";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         text = "Project Directory";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Modify or Select Current Project Directory Popup...";
      };
      new GuiBitmapButtonCtrl(TBLOSColMesh) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "286 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::losCollisionMeshes";
         command = "objectViewerGUI.setLOSCollisionMeshesState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./LOSCollision";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Display Object Line of Sight Collision Mesh as Translucent Green";
      };
      new GuiBitmapButtonCtrl(TBShowAllNodes) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "358 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::showAllNodes";
         command = "objectViewerGUI.setNodesShowState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./ShowNodes";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Draw All Nodes (Render Settings on Display Properties Window)";
      };
      new GuiButtonCtrl(nodeSortListButton) {
         profile = "GuiButtonProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "552 578";
         extent = "15 16";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::sortNodeList";
         command = "objectViewerGUI.sortNodeList();";
         text = "S";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Alphabetically Sort Node List";
      };
      new GuiPopUpMenuCtrl(presetsPopup) {
         profile = "GuiPopUpMenuProfileGray";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "375 26";
         extent = "60 16";
         minExtent = "8 2";
         visible = "1";
         text = "Presets";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Modify or Select User Defined Presets Popup...";
      };
      new GuiDragButtonCtrl(TBDisplayZoom) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "771 26";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         altCommand = "objectViewerGUI.dragZoom();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./Magnifier";
         useInactiveBitmap = "0";
         mousedelta = "0 0";
         modifier = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = ($platform $= "macos") ? "Hold and Drag to Zoom Display (SHIFT = Faster, SHIFT+CMD = Fastest)" : "Hold and Drag to Zoom Display (SHIFT = Faster, SHIFT+CTRL = Fastest)";
      };
      new GuiDragButtonCtrl(TBDisplayTranslate) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "753 26";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         variable = "$DTSExporter::translate";
         command = "objectViewerGUI.dragTranslateState();";
         altCommand = "objectViewerGUI.dragTranslate();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./Translate";
         useInactiveBitmap = "0";
         mousedelta = "0 0";
         modifier = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Hold and Drag to Move Display (SHIFT = Faster)";
      };
      new GuiDragButtonCtrl(TBDisplayRotate) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "735 26";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         variable = "$DTSExporter::rotate";
         command = "objectViewerGUI.dragRotateState();";
         altCommand = "objectViewerGUI.dragRotate();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./Rotate";
         useInactiveBitmap = "0";
         mousedelta = "0 0";
         modifier = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Hold and Drag to Rotate Display";
      };
      new GuiBitmapButtonCtrl(TBDisplayTarget) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "699 26";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.targetObject();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./Target";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Autosize View to Fit Object";
      };
      new GuiPopUpMenuCtrl(objDisplayView) {
         profile = "GuiPopUpMenuProfileGray";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "114 26";
         extent = "76 16";
         minExtent = "8 2";
         visible = "1";
         text = "Perspective";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Camera Projection (Perspective or Orthographic) Popup...";
      };
      new GuiPopUpMenuCtrl(gridSizePopup) {
         profile = "GuiPopUpMenuProfileGray";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "314 26";
         extent = "60 16";
         minExtent = "8 2";
         visible = "1";
         text = "100x100";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Change Number of Grid Divisions Popup (Grid Size in Torque Units Changed in Display Properties Window)...";
      };
      new GuiPopUpMenuCtrl(gearMenu) {
         profile = "GuiPopUpMenuProfileGray";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "436 26";
         extent = "30 16";
         minExtent = "8 2";
         visible = "0";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmap = "./GearMenu";
         bitmapBounds = "16 16";
            helpTag = "0";
      };
      new GuiBitmapButtonCtrl(TBDrawGrid) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "142 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::gridToggle";
         command = "objectViewerGUI.setGridState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./GridToggle";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Draw Grid";
      };
      new GuiBitmapButtonCtrl(TBWindowOnTop) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "164 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::windowOnTop";
         command = "exporterSetWindowOnTop();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./OnTop";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Force TST Pro Window on Top of All Windows";
      };
      new GuiButtonCtrl(dispShapeProperties) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 165";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleShapeWindow();";
         text = "Shape Properties";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Shape Properties (Tree View) Window...";
      };
      new GuiBitmapButtonCtrl(TBEnableSGLightingPack) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "452 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::SGLightingPack";
         command = "objectViewerGUI.setLightingPackState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./LightingPack";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Synapse Gaming Lighting Pack";
      };
      new GuiButtonCtrl(nodeVerticesDisplayButton) {
         profile = "GuiButtonProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "569 578";
         extent = "15 16";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::renderNodeVertices";
         command = "objectViewerGUI.setNodeVertexRenderState();";
         text = "V";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Draw Selected Node's Vertices, Color Indicates Node Influence (As Defined in Display Properties Window)";
      };
      new GuiButtonCtrl(objectSortListButton) {
         profile = "GuiButtonProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "327 578";
         extent = "15 16";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::sortObjectList";
         command = "objectViewerGUI.sortObjectList();";
         text = "S";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Alphabetically Sort Object List";
      };
      new GuiButtonCtrl(sequenceSortListButton) {
         profile = "GuiButtonProfileGreen";
         horizSizing = "right";
         vertSizing = "top";
         position = "327 545";
         extent = "15 16";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::sortSequenceList";
         command = "objectViewerGUI.sortSequenceList();";
         text = "S";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Alphabetically Sort Animation Sequence List";
      };
      new GuiBitmapButtonCtrl(TBDrawMounted) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "402 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::drawMounted";
         command = "objectViewerGUI.setDrawMountedState();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./DrawMounted";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Drawing of Objects Mounted to Nodes";
      };
      new GuiBitmapButtonCtrl(sequencePingPong) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "735 574";
         extent = "30 20";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(4);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./PingPong";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Ping Pong Animation Sequence Playback";
      };
      new GuiButtonCtrl(lightPropertiesButton) {
         profile = "GuiButtonProfilePurple";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 130";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.toggleLPWindow();";
         text = "Light Properties";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Open Lighting Properties Window...";
      };
      new GuiBitmapCtrl(TBMoreArrow) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "584 2";
         extent = "32 32";
         minExtent = "8 2";
         visible = "0";
         bitmap = "./MoreArrow";
         wrap = "0";
      };
      new GuiBitmapCtrl(BottomMoreArrow) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "top";
         position = "575 574";
         extent = "32 32";
         minExtent = "8 2";
         visible = "0";
         bitmap = "./MoreArrow";
         wrap = "0";
      };
      new GuiBitmapCtrl(LeftMoreArrowDown) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "5 512";
         extent = "32 32";
         minExtent = "8 2";
         visible = "0";
         bitmap = "./MoreArrowDown";
         wrap = "0";
      };
      new GuiBitmapButtonCtrl(TBFadeMesh) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "380 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::meshFade";
         command = "objectViewerGUI.setMeshFade();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./FadeMesh";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Draw Mesh in Ghost (X-Ray) Mode to Allow Nodes to Show Through (Translucent Settings in Display Properties Window)";
      };
      new GuiBitmapButtonCtrl(TBSortedMeshOrder) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "330 2";
         extent = "20 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::showSortedMeshOrder";
         command = "objectViewerGUI.setSortedMeshOrder();";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./SortedMeshClusters";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Show Sorted Mesh Sort Order Using Shading (Best with Shaded Solid Rendering and No Light)";
      };
      new GuiDragButtonCtrl(TBDisplayFOV) {
         profile = "GuiDefaultProfile";
         horizSizing = "left";
         vertSizing = "bottom";
         position = "717 26";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         variable = "$DTSExporter::fov";
         command = "objectViewerGUI.dragFOVState();";
         altCommand = "objectViewerGUI.dragFOV();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./FOV";
         useInactiveBitmap = "0";
         mousedelta = "0 0";
         modifier = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Hold and Drag to Change Camera Field of View (FOV Value Displayed Below)";
      };
   };
   new GuiWindowCtrl(SequenceListWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "110 32";
      extent = "636 258";
      minExtent = "100 100";
      visible = "0";
      text = "Sequence Info";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispSeqButton.setValue(0); objectViewerGUI.toggleSequenceWindow();";
         entryCount = "0";

      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "width";
         vertSizing = "bottom";
         position = "9 46";
         extent = "616 100";
         minExtent = "8 8";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(SequenceListGUI) {
            profile = "GuiTextListProfile";
            horizSizing = "width";
            vertSizing = "height";
            position = "2 2";
            extent = "594 15";
            minExtent = "8 15";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "1 26 105 120 135 161 196 231 266 299 336 371 406 431 466 501 546";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
               entryCount = "0";
         };
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "12 25";
         extent = "16 18";
         minExtent = "8 2";
         visible = "1";
         text = "No.";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Number";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "40 25";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Name";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Name";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "175 25";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Cycle";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Automatically Repeat?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "210 25";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Blend";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Is Animation Sequence Setup to Blend with Another Sequence?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "245 25";
         extent = "14 18";
         minExtent = "8 2";
         visible = "1";
         text = "IFL";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does the Animation Sequence Reference an Image File List?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "420 25";
         extent = "12 18";
         minExtent = "8 2";
         visible = "1";
         text = "Pri";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence's Priority Over Other Playing Sequences when there is a Vertex Conflict";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "445 25";
         extent = "25 18";
         minExtent = "8 2";
         visible = "1";
         text = "Keys";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Number of Keyframes in Animation Sequence";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "480 25";
         extent = "22 18";
         minExtent = "8 2";
         visible = "1";
         text = "Time";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Time for Animation Sequence to Play (in Seconds) Based on the Frames per Second";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "515 25";
         extent = "19 18";
         minExtent = "8 2";
         visible = "1";
         text = "FPS";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence's Playback Rate in Frames per Second";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "560 25";
         extent = "38 18";
         minExtent = "8 2";
         visible = "1";
         text = "GndFrm";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Number of Ground Frames in Animation Sequence";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "280 25";
         extent = "16 18";
         minExtent = "8 2";
         visible = "1";
         text = "Vis";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Modify Object Visibility?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "315 25";
         extent = "18 18";
         minExtent = "8 2";
         visible = "1";
         text = "Frm";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Morph the Vertices?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "350 25";
         extent = "26 18";
         minExtent = "8 2";
         visible = "1";
         text = "MFrm";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Modify an Object's Material UV Coordinates?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "120 25";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "T";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Translates Nodes";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "135 25";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "R";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Rotates Nodes";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "150 25";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "S";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Scales Nodes";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "425 176";
         extent = "200 70";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(SequenceListTriggers) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "178 15";
            minExtent = "8 15";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "1 29 69 109";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
               entryCount = "0";
         };
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "425 146";
         extent = "92 18";
         minExtent = "8 2";
         visible = "1";
         text = "Sequence Triggers";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "428 161";
         extent = "16 18";
         minExtent = "8 2";
         visible = "1";
         text = "No.";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Trigger Number";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "458 161";
         extent = "25 18";
         minExtent = "8 2";
         visible = "1";
         text = "State";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Trigger Turn an Event On or Off?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "498 161";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Invert";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "If Animation Sequence is Played Backwards, is Trigger's State Inverted?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "538 161";
         extent = "18 18";
         minExtent = "8 2";
         visible = "1";
         text = "Pos";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Position Within Animation Sequence (Time Scaled from 0.0 - 1.0) at which Trigger Fires";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "385 25";
         extent = "24 18";
         minExtent = "8 2";
         visible = "1";
         text = "Trigs";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Contain Triggers?";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "9 176";
         extent = "334 70";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(SequenceListNodes) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "312 15";
            minExtent = "8 15";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "1 125 175 225";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
               entryCount = "0";
         };
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "17 161";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Name";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Name of Node Controlled by Selected Animation Sequence";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "140 161";
         extent = "28 18";
         minExtent = "8 2";
         visible = "1";
         text = "Trans";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Translate this Node?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "190 161";
         extent = "16 18";
         minExtent = "8 2";
         visible = "1";
         text = "Rot";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Rotate this Node?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "240 161";
         extent = "27 18";
         minExtent = "8 2";
         visible = "1";
         text = "Scale";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Does Animation Sequence Scale this Node?";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "9 146";
         extent = "125 18";
         minExtent = "8 2";
         visible = "1";
         text = "Nodes Used in Sequence:";
         maxLength = "255";
      };
      new GuiTextCtrl(SequenceListNodeCount) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "139 146";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "0";
         maxLength = "255";
      };
   };
   new GuiWindowCtrl(DisplayPropertiesWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "108 40";
      extent = "187 458";
      minExtent = "8 2";
      visible = "0";
      text = "Display Properties";
      maxLength = "255";
      resizeWidth = "0";
      resizeHeight = "0";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispPropertiesButton.setValue(0); objectViewerGUI.toggleDPWindow();";

      new GuiTabCtrl(DPTabs) {
         profile = "GuiTabProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 28";
         extent = "175 22";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::dpTabChoice";
         command = "DPTabs.select();";
         tabText = "General Render Nodes";
         textMargin = "4 2";
      };
      new GuiControl(DPGeneralTabCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 50";
         extent = "187 402";
         minExtent = "8 2";
         visible = "0";

         new GuiCheckBoxCtrl(DPDrawGrid) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 5";
            extent = "74 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::gridToggle";
            command = "objectViewerGUI.setGridState();";
            text = "Draw Grid :";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Draw a Grid at the Given Size and Number of Subdivisions";
         };
         new GuiPopUpMenuCtrl(DPGridType) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "84 5";
            extent = "75 18";
            minExtent = "8 2";
            visible = "1";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Number of Grid Subdivisions Popup...";
         };
         new GuiTextEditCtrl(DPGridSize) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "84 30";
            extent = "64 18";
            minExtent = "8 2";
            visible = "0";
            altCommand = "DisplayPropertiesWindow.update();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Size of One Grid Subdivision in Meters";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 30";
            extent = "47 18";
            minExtent = "8 2";
            visible = "1";
            text = "Grid Size:";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "152 29";
            extent = "8 18";
            minExtent = "8 2";
            visible = "1";
            text = "m";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 65";
            extent = "61 18";
            minExtent = "8 2";
            visible = "1";
            text = "Background:";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 88";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "R:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPBackBitmapPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "49 161";
            extent = "132 18";
            minExtent = "8 2";
            visible = "1";
            text = "[none]";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Select a Bitmap to Place in the Background Popup...";
         };
         new GuiTextEditCtrl(DPBackRed) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 89";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "DPBackRed.onSelect();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Custom Background Color Red Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 110";
            extent = "11 18";
            minExtent = "8 2";
            visible = "1";
            text = "G:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPBackGreen) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 111";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "DPBackGreen.onSelect();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Custom Background Color Green Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 132";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "B:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPBackBlue) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 133";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "DPBackBlue.onSelect();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Custom Background Color Blue Component";
         };
         new GuiColouredBox(DPBackColor) {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "119 89";
            extent = "62 62";
            minExtent = "8 2";
            visible = "1";
            color = "120 120 120 255";
            color2 = "0 0 0 255";
            opaque = "1";
            gradientDir = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Current Background Custom Color";
         };
         new GuiPopUpMenuCtrl(DPColorPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "91 66";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Custom";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
               addCustom = "1";
            tooltipprofile = "TooltipProfile";
            tooltip = "Background Color Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 160";
            extent = "35 18";
            minExtent = "8 2";
            visible = "1";
            text = "Bitmap:";
            maxLength = "255";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 55";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 185";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiCheckBoxCtrl(DPInvertMouseRotation) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 340";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::invertMouseRotation";
            command = "objectViewerGUI.setInvertMouseRotation();";
            text = "Invert view\'s mouse rotation";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Invert the 3D View's Rotation Direction when Using the Mouse";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 330";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 195";
            extent = "68 18";
            minExtent = "8 2";
            visible = "1";
            text = "HUD Location:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPHudLocation) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "91 195";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Upper Left";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Toggle HUD On or Off and Select Its Draw Location Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 220";
            extent = "52 18";
            minExtent = "8 2";
            visible = "1";
            text = "HUD Color:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPHudColorPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "91 220";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
               addCustom = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Color of HUD Text Popup...";
         };
         new GuiCheckBoxCtrl(DPShowHudGridSize) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 265";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::hudShowGridSize";
            command = "DPShowHudGridSize.onSelect();";
            text = "Show grid size on HUD";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Grid Size on HUD";
         };
         new GuiCheckBoxCtrl(DPShowHudDetailLevels) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 285";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::hudShowDetailLevels";
            command = "DPShowHudDetailLevels.onSelect();";
            text = "Show detail level on HUD";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Level of Detail Information on HUD";
         };
         new GuiCheckBoxCtrl(DPWindowOnTop) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 360";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::windowOnTop";
            command = "exporterSetWindowOnTop();";
            text = "Main window is always on top";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Force TST Pro Window on Top of All Windows";
         };
         new GuiCheckBoxCtrl(DPShowHudFPS) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 245";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::hudShowFPS";
            command = "DPShowHudFPS.onSelect();";
            text = "Show FPS on HUD";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display TST Pro Frames Per Second on HUD";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 380";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Background sleep:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPSleepAmount) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "104 380";
            extent = "52 18";
            minExtent = "8 2";
            visible = "0";
            variable = "$pref::DTSExporter::backgroundSleepAmount";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "When TST Pro is in Background, Number of Milliseconds to Sleep Between Frames";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "160 380";
            extent = "14 18";
            minExtent = "8 2";
            visible = "1";
            text = "ms";
            maxLength = "255";
         };
         new GuiCheckBoxCtrl(DPShowHudBillboardLOD) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 305";
            extent = "171 18";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::hudShowBillboardLOD";
            command = "DPShowHudBillboardLOD.onSelect();";
            text = "Show Billboard LOD on HUD";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Billboard Level of Detail Information on HUD";
         };
         new GuiDragButtonCtrl(DPBackRedArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 90";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "DisplayPropertiesWindow.dragCustomBackColor(DPBackRedArrows,DPBackRed);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Background Color Red Component";
         };
         new GuiDragButtonCtrl(DPBackGreenArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 112";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "DisplayPropertiesWindow.dragCustomBackColor(DPBackGreenArrows,DPBackGreen);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Background Color Green Component";
         };
         new GuiDragButtonCtrl(DPBackBlueArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 134";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "DisplayPropertiesWindow.dragCustomBackColor(DPBackBlueArrows,DPBackBlue);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Background Color Blue Component";
         };
      };
      new GuiControl(DPRenderTabCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 50";
         extent = "187 404";
         minExtent = "8 2";
         visible = "0";

         new GuiSliderCtrl(DPTristripBias) {
            profile = "GuiSliderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "70 200";
            extent = "112 35";
            minExtent = "8 2";
            visible = "1";
            altCommand = "DPTristripBias.setTristripBias();";
            range = "0.000000 50.000000";
            ticks = "10";
            value = "0";
            displayInts = "1";
            forceOnTick = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Modify Tri-Strip Coloring when Bordering Strips are Too Close in Color";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 165";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiCheckBoxCtrl(DPSolidBB) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 333";
            extent = "148 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::solidBoundingBox";
            command = "objectViewerGUI.setBoundingBoxState();";
            text = "Render Solid Bounding Box";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Object Bounding Box as Translucent Red";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 285";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 5";
            extent = "29 18";
            minExtent = "8 2";
            visible = "1";
            text = "EMap:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPEMapPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "40 5";
            extent = "142 18";
            minExtent = "8 2";
            visible = "1";
            text = "[none]";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Select a Bitmap as an Environment Map Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 175";
            extent = "84 18";
            minExtent = "8 2";
            visible = "1";
            text = " Wireframe Color:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPWireframeColorPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 175";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Mesh Wireframe Color Selection Popup...";
         };
         new GuiCheckBoxCtrl(DPCollisionMeshes) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 293";
            extent = "148 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::collisionMeshes";
            command = "objectViewerGUI.setCollisionMeshesState();";
            text = "Render collision meshes";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Object Collision Mesh as Translucent Blue";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 200";
            extent = "60 18";
            minExtent = "8 2";
            visible = "1";
            text = "Tristrip Bias:";
            maxLength = "255";
         };
         new GuiCheckBoxCtrl(DPLOSCollisionMeshes) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 313";
            extent = "158 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::losCollisionMeshes";
            command = "objectViewerGUI.setLOSCollisionMeshesState();";
            text = "Render LOS collision meshes";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Object Line of Sight Collision Mesh as Translucent Green";
         };
         new GuiBitmapCtrl(DPEMapBitmap) {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "29 30";
            extent = "128 128";
            minExtent = "8 2";
            visible = "1";
            wrap = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Current Environment Map Preview";
         };
         new GuiCheckBoxCtrl(DPShowRTAxis) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 385";
            extent = "171 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::showRotationTranslationAxis";
            command = "objectViewerGUI.setRotationTranslationAxis();";
            text = "Show rotation/translation axis";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Display Axis in 3D View at Point of Rotation and Translation";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 378";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 250";
            extent = "49 18";
            minExtent = "8 2";
            visible = "1";
            text = "Fade Amt:";
            maxLength = "255";
         };
         new GuiSliderCtrl(DPMeshFadeAmount) {
            profile = "GuiSliderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "70 250";
            extent = "112 35";
            minExtent = "8 2";
            visible = "1";
            altCommand = "DPMeshFadeAmount.setMeshFadeAmount();";
            range = "0.000000 1.000000";
            ticks = "10";
            value = "0.5";
            displayInts = "0";
            forceOnTick = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Amount to Fade a Mesh in Ghost (X-Ray) Mode";
         };
         new GuiCheckBoxCtrl(DPFadeMesh) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 230";
            extent = "171 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::meshFade";
            command = "objectViewerGUI.setMeshFade();";
            text = "Render meshes in ghost mode";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Draw Mesh in Ghost (X-Ray) Mode to Allow Nodes to Show Through";
         };
         new GuiCheckBoxCtrl(DPSortedMeshOrder) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 353";
            extent = "174 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::showSortedMeshOrder";
            command = "objectViewerGUI.setSortedMeshOrder();";
            text = "Show Sorted Mesh Draw Order";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Show Sorted Mesh Sort Order Using Shading (Best with Shaded Solid Rendering and No Light)";
         };
      };
      new GuiControl(DPNodeTabCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 50";
         extent = "187 320";
         minExtent = "8 2";
         visible = "0";

         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 145";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiCheckBoxCtrl(DPShowAllNodes) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 5";
            extent = "140 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::showAllNodes";
            command = "objectViewerGUI.setNodesShowState();";
            text = "Show All Nodes";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Draw All Nodes Based on Settings Below";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 25";
            extent = "81 18";
            minExtent = "8 2";
            visible = "1";
            text = "Node Axis Color:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPNodeColor) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 25";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Node Color Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 50";
            extent = "94 18";
            minExtent = "8 2";
            visible = "1";
            text = "Connect Nodes As:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPSDrawNodes) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "106 50";
            extent = "76 18";
            minExtent = "8 2";
            visible = "1";
            text = "Lines";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "How to Draw Node-to-Node Connections Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 75";
            extent = "85 18";
            minExtent = "8 2";
            visible = "1";
            text = "Connection Color:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPNodeConnectColor) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 75";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "Node-to-Node Connection Color Selection Popup...";
         };
         new GuiCheckBoxCtrl(DPBoldAnimatedNode) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 100";
            extent = "140 20";
            minExtent = "8 2";
            visible = "1";
            command = "DisplayPropertiesWindow.update();";
            text = "Bold Animated Node";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Draw Nodes Controlled by Current Animation Sequence in Bold";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 120";
            extent = "76 18";
            minExtent = "8 2";
            visible = "1";
            text = "Animated Node:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPAnimatedNodeColor) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 120";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
               addCustom = "1";
            tooltipprofile = "TooltipProfile";
            tooltip = "Nodes Controlled by Current Animation Sequence Color Selection Popup...";
         };
         new GuiCheckBoxCtrl(DPShowNodeVertices) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 150";
            extent = "177 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::renderNodeVertices";
            command = "objectViewerGUI.setNodeVertexRenderState();";
            text = "Render node controlled vertices";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Draw Selected Node's Vertices, Color Indicates Node Influence Based on Settings Below";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 170";
            extent = "55 18";
            minExtent = "8 2";
            visible = "1";
            text = "0% weight:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPNodeVertex0Color) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 170";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "0% Influence on Vertex by Node Color Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 195";
            extent = "67 18";
            minExtent = "8 2";
            visible = "1";
            text = "100% weight:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPNodeVertex1Color) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "92 195";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Color";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
            tooltipprofile = "TooltipProfile";
            tooltip = "100% Influence on Vertex by Node Color Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 215";
            extent = "16 18";
            minExtent = "8 2";
            visible = "1";
            text = "0%";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "82 215";
            extent = "22 18";
            minExtent = "8 2";
            visible = "1";
            text = "50%";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "154 215";
            extent = "28 18";
            minExtent = "8 2";
            visible = "1";
            text = "100%";
            maxLength = "255";
         };
         new GuiColouredBox(DPNodeVertexColorBox) {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 233";
            extent = "177 15";
            minExtent = "8 2";
            visible = "1";
            color = "255 0 0 255";
            color2 = "255 255 0 255";
            opaque = "1";
            gradientDir = "1";
            tooltipprofile = "TooltipProfile";
            tooltip = "Vertex Color by Selected Node's Influence";
         };
      };
      new GuiControl() {
         profile = "GuiBorderProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "3 46";
         extent = "181 3";
         minExtent = "8 2";
         visible = "1";
      };
   };
   new GuiWindowCtrl(MountWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "107 39";
      extent = "380 457";
      minExtent = "8 2";
      visible = "0";
      text = "Mounting";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispMountButton.setValue(0); objectViewerGUI.toggleMOWindow();";

      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 45";
         extent = "370 123";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "dynamic";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(MWMountedList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "348 2";
            minExtent = "8 2";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0 250";
            fitParentWidth = "1";
            clipColumnText = "1";
            clipLeft = "1";
               entryCount = "0";
         };
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "10 28";
         extent = "75 18";
         minExtent = "8 2";
         visible = "1";
         text = "Mounted Object";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Name of Mounted Object";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "259 28";
         extent = "42 18";
         minExtent = "8 2";
         visible = "1";
         text = "On Node";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Name of Node the Object is Mounted To";
      };
      new GuiButtonCtrl(MWUnmountButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 173";
         extent = "120 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.unmount();";
         text = "Unmount";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Unmount Selected Object";
      };
      new GuiPopUpMenuCtrl(MWObjectPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 218";
         extent = "141 18";
         minExtent = "8 2";
         visible = "1";
         text = "Objects";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Loaded Objects to Mount Popup...";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 238";
         extent = "141 195";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "dynamic";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiMountTextListCtrl(MWMountObjectList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "119 2";
            minExtent = "8 2";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
            sortMountFirst = "1";
               entryCount = "0";
         };
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "234 238";
         extent = "141 195";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "dynamic";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiMountTextListCtrl(MWMountNodesList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "119 2";
            minExtent = "8 2";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
            sortMountFirst = "1";
               entryCount = "0";
         };
      };
      new GuiButtonCtrl(MWMountButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "153 282";
         extent = "75 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.mount();";
         text = "Mount >>>";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mount Object's Node on Left to Current Object's Node on Right";
      };
      new GuiButtonCtrl(MWMountLeftWheelButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "153 322";
         extent = "75 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.mountLeftWheel();";
         text = "Mount Left";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mount Object's Node on Left as a Standard TGE Left Wheel to Node on Right";
      };
      new GuiButtonCtrl(MWMountRightWheelButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "153 342";
         extent = "75 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.mountRightWheel();";
         text = "Mount Right";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mount Object's Node on Left as a Standard TGE Right Wheel to Node on Right";
      };
      new GuiButtonCtrl(MWMountWheelsButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "153 362";
         extent = "75 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.mountWheels();";
         text = "Mount Wheels";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Mount Object's Node on Left to All Standard TGE Vehicle 'hubX' Nodes";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "235 220";
         extent = "73 18";
         minExtent = "8 2";
         visible = "1";
         text = "Current Object:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Nodes on the Current Object to Mount To";
      };
      new GuiPopUpMenuCtrl(MWSortCurrentMountListPopup) {
         profile = "GuiPopUpMenuProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "234 435";
         extent = "141 16";
         minExtent = "8 2";
         visible = "1";
         text = "Leave list unsorted";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "0";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Node Name Sort Method Popup...";
      };
      new GuiPopUpMenuCtrl(MWSortMountedListPopup) {
         profile = "GuiPopUpMenuProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 435";
         extent = "141 16";
         minExtent = "8 2";
         visible = "1";
         text = "Leave list unsorted";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "0";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Node Name Sort Method Popup...";
      };
      new GuiButtonCtrl(MWUnmountAllButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "130 173";
         extent = "120 15";
         minExtent = "8 2";
         visible = "1";
         command = "MountWindow.unmountAll();";
         text = "Unmount All";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Unmount All Objects";
      };
   };
   new GuiWindowCtrl(MaterialsWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "109 25";
      extent = "443 525";
      minExtent = "8 2";
      visible = "0";
      text = "Materials";
      maxLength = "255";
      resizeWidth = "0";
      resizeHeight = "0";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispMaterialsButton.setValue(0); objectViewerGUI.toggleMLWindow();";

      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 25";
         extent = "175 390";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "dynamic";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiSimpleTreeViewCtrl(MWMaterialTree) {
            profile = "GuiTreeViewProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "640 2";
            minExtent = "8 2";
            visible = "1";
         };
      };
      new GuiMaterialBitmapCtrl(MWBitmap) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "181 25";
         extent = "256 256";
         minExtent = "64 64";
         visible = "1";
         wrap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Selected Materials Preview, Scaled to Fit if Larger than 256x256";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "185 282";
         extent = "24 18";
         minExtent = "8 2";
         visible = "1";
         text = "Size:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Image Dimensions of Selected Material";
      };
      new GuiTextCtrl(MWSizeText) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "212 282";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "256 x 256";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Dimensions of Select Material as Loaded, In Brackets is Dimension as Sent to Graphics Card";
      };
      new GuiButtonCtrl() {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 502";
         extent = "120 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.clearTextureCache();";
         text = "Flush Texture Cache";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Force Reload of All Materials";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "185 314";
         extent = "200 100";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "dynamic";
         vScrollBar = "dynamic";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(MWFlagList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "196 15";
            minExtent = "8 15";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
         };
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "185 297";
         extent = "29 18";
         minExtent = "8 2";
         visible = "1";
         text = "Flags:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "List of Flags for Selected Material";
      };
      new GuiCheckBoxCtrl(MWFlushCheckbox) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "135 502";
         extent = "140 15";
         minExtent = "8 2";
         visible = "1";
         command = "TBTextureFlush.setValue(MWFlushCheckbox.getValue()); objectViewerGUI.flushTextureCacheSchedule();";
         text = "Auto flush textures every";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Timed Texture Reloading";
      };
      new GuiTextEditCtrl(MWFlushTimeEdit) {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "280 501";
         extent = "27 18";
         minExtent = "8 2";
         visible = "0";
         command = "$pref::DTSExporter::flushTextureCacheScheduleTime = MWFlushTimeEdit.getValue();";
         text = "10";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Time Interval Between Forced Texture Reloading, in Seconds";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "310 500";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "s";
         maxLength = "255";
      };
      new GuiCheckBoxCtrl(MWForceSkin) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 425";
         extent = "219 15";
         minExtent = "8 2";
         visible = "1";
         command = "MaterialsWindow.setSkinState();";
         text = "Force current object to use a skin named:";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Have Current Object Use a Skin Name for Material Textures";
      };
      new GuiTextEditCtrl(MWSkinName) {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "225 425";
         extent = "64 18";
         minExtent = "8 2";
         visible = "0";
         altCommand = "MaterialsWindow.setSkinName();";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "1";
         sinkAllKeyEvents = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Skin Name to be Used for Material Textures";
      };
      new GuiButtonCtrl(MWResetSkin) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "300 425";
         extent = "120 15";
         minExtent = "8 2";
         visible = "1";
         command = "MaterialsWindow.resetSkinName();";
         text = "Reset to \'base\'";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Reset the Material Texture Skin Name to Default";
      };
      new GuiControl() {
         profile = "GuiBorderProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 450";
         extent = "433 3";
         minExtent = "8 2";
         visible = "1";
      };
      new GuiControl() {
         profile = "GuiBorderProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 495";
         extent = "433 3";
         minExtent = "8 2";
         visible = "1";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 455";
         extent = "132 18";
         minExtent = "8 2";
         visible = "1";
         text = "Global Base Mip Map Level:";
         maxLength = "255";
      };
      new GuiTextEditCtrl(MWMipMapLevel) {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "140 455";
         extent = "64 18";
         minExtent = "8 2";
         visible = "1";
         altCommand = "MaterialsWindow.setMipMapLevel();";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Base Mip Map Level to Use for All Textures, Higher Number is Less Detailed";
      };
      new GuiDragButtonCtrl(MWMipMapLevelDrag) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "207 455";
         extent = "16 16";
         minExtent = "8 2";
         visible = "1";
         altCommand = "MaterialsWindow.setMipMapLevelDrag();";
         text = "Button";
         groupNum = "-1";
         buttonType = "PushButton";
         bitmap = "./LeftRightArrows";
         useInactiveBitmap = "0";
         mousedelta = "0 0";
         modifier = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Hold and Drag to Change Base Mip Map Level to Use for All Textures, Higher Number is Less Detailed";
      };
      new GuiCheckBoxCtrl(MWLockMipMapLevel) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "300 455";
         extent = "115 15";
         minExtent = "8 2";
         visible = "1";
         command = "MaterialsWindow.lockMipMapLevel();";
         text = "Lock Mip Map Level";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Force All Textures to Remain at Base Mip Map Level (Disables Mip Mapping)";
      };
      new GuiCheckBoxCtrl(MWDrawBitmapAtMipMap) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 475";
         extent = "286 15";
         minExtent = "8 2";
         visible = "1";
         command = "MaterialsWindow.drawMipMapBitmap();";
         text = "Draw Material Window bitmap at current mip map level";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Have the Selected Material Preview Reflect the Base Mip Map Level";
      };
   };
   new GuiWindowCtrl(LODWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "108 404";
      extent = "215 130";
      minExtent = "8 2";
      visible = "0";
      text = "Detail Levels";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispLODButton.setValue(0); objectViewerGUI.toggleLODWindow();";

      new GuiCheckBoxCtrl(LODWDetailControl) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 25";
         extent = "175 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::LODControl";
         command = "objectViewerGUI.setLODControl();";
         text = "Detail levels controlled by slider";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Lock to Current Level of Detail and Activate Slider Below";
      };
      new GuiSliderCtrl(LODWSlider) {
         profile = "GuiSliderProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 55";
         extent = "204 32";
         minExtent = "8 2";
         visible = "1";
         altCommand = "objectViewerGUI.changeCurrentLOD();";
         range = "0.000000 0.000000";
         ticks = "-1";
         value = "0";
         displayInts = "1";
         forceOnTick = "1";
         tooltipprofile = "TooltipProfile";
         tooltip = "Set Current Level of Detail when Check Box Above is Active";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 105";
         extent = "49 18";
         minExtent = "8 2";
         visible = "1";
         text = "Pixel Size:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Current Size of Object in Pixels Using Standard Torque Calculations";
      };
      new GuiTextCtrl(LODWPixelSize) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "70 105";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "0";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Current Size of Object in Pixels Using Standard Torque Calculations";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 85";
         extent = "58 18";
         minExtent = "8 2";
         visible = "1";
         text = "Detail Polys:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Number of Polygons in Object at Current Level of Detail";
      };
      new GuiTextCtrl(LODWNumPolys) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "70 85";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "0";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Number of Polygons in Object at Current Level of Detail";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "115 85";
         extent = "53 18";
         minExtent = "8 2";
         visible = "1";
         text = "Detail Size:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Minimum Size in Pixels of Current Level of Detail Before Switching to the Next Detail Level";
      };
      new GuiTextCtrl(LODWDist) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "170 85";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "0";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Minimum Size in Pixels of Current Level of Detail Before Switching to the Next Detail Level";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "115 105";
         extent = "41 18";
         minExtent = "8 2";
         visible = "1";
         text = "Cur Dist:";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Current Distance of Object Center to Camera";
      };
      new GuiTextCtrl(LODWCurDist) {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "170 105";
         extent = "8 18";
         minExtent = "8 2";
         visible = "1";
         text = "0";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Current Distance of Object Center to Camera";
      };
   };
   new GuiWindowCtrl(ThreadWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "5 226";
      extent = "276 192";
      minExtent = "8 2";
      visible = "0";
      text = "Thread Controls";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispThreadButton.setValue(0); objectViewerGUI.toggleThreadWindow();";

      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 20";
         extent = "34 18";
         minExtent = "8 2";
         visible = "1";
         text = "Thread";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Thread Number";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "65 20";
         extent = "49 18";
         minExtent = "8 2";
         visible = "1";
         text = "Sequence";
         maxLength = "255";
         tooltipprofile = "TooltipProfile";
         tooltip = "Animation Sequence Used in Selected Thread";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 40";
         extent = "55 80";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(TWThreadList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "33 2";
            minExtent = "8 2";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
               entryCount = "0";
         };
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "65 40";
         extent = "100 80";
         minExtent = "8 2";
         visible = "1";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiTextListCtrl(TWThreadSequenceList) {
            profile = "GuiTextListProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "2 2";
            extent = "78 2";
            minExtent = "8 2";
            visible = "1";
            enumerate = "0";
            resizeCell = "1";
            columns = "0";
            fitParentWidth = "1";
            clipColumnText = "0";
            clipLeft = "0";
               entryCount = "0";
         };
      };
      new GuiButtonCtrl(TWThreadNewButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "170 40";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "ThreadWindow.threadAdd();";
         text = "New Thread";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Add a New Thread to Bottom of Thread List";
      };
      new GuiButtonCtrl(TWThreadDeleteButton) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "170 60";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "ThreadWindow.threadDelete();";
         text = "Delete Thread";
         groupNum = "-1";
         buttonType = "PushButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Remove Selected Thread From List";
      };
      new GuiCheckBoxCtrl(TWThreadTransition) {
         profile = "GuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 120";
         extent = "140 30";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::threadTransition";
         command = "objectViewerGUI.setThreadTransition();";
         text = "Transition to sequence in";
         groupNum = "-1";
         buttonType = "ToggleButton";
         tooltipprofile = "TooltipProfile";
         tooltip = "Toggle Timed Transition Between Animation Sequences Based on Settings Below";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 147";
         extent = "62 18";
         minExtent = "8 2";
         visible = "1";
         text = "Transition to:";
         maxLength = "255";
      };
      new GuiPopUpMenuCtrl(TWThreadTransitionToPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "95 150";
         extent = "150 15";
         minExtent = "8 2";
         visible = "1";
         text = "slider position";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Select Where the Sequence Being Switched to Will Start Animating From";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 167";
         extent = "86 18";
         minExtent = "8 2";
         visible = "1";
         text = "Target Sequence:";
         maxLength = "255";
      };
      new GuiPopUpMenuCtrl(TWThreadTargetPopup) {
         profile = "GuiPopUpMenuProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "95 170";
         extent = "150 15";
         minExtent = "8 2";
         visible = "1";
         text = "plays during transition";
         maxLength = "255";
         maxPopupHeight = "200";
         sbUsesNAColor = "1";
         reverseTextList = "0";
         bitmapBounds = "16 16";
         tooltipprofile = "TooltipProfile";
         tooltip = "Select if the Sequence Being Switched to Will Animate During Transition";
      };
      new GuiTextEditCtrl(TWThreadDurationEdit) {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "145 127";
         extent = "30 18";
         minExtent = "8 2";
         visible = "0";
         variable = "pref::DTSExporter::threadTransitionDuration";
         command = "objectViewerGUI.setThreadTransitionDuration();";
         text = "0.2";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Time for Transition from Current Sequence to Newly Selected Sequence, in Seconds";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "179 127";
         extent = "42 18";
         minExtent = "8 2";
         visible = "1";
         text = "seconds";
         maxLength = "255";
      };
      new GuiBitmapButtonCtrl(TWSequencePlay) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "236 85";
         extent = "22 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(1);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./PlaySml";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Play Current Animation Sequence Forwards";
      };
      new GuiBitmapButtonCtrl(TWSequencePause) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "209 85";
         extent = "22 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(0);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./PauseSml";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Pause Current Animation Sequence";
      };
      new GuiBitmapButtonCtrl(TWSequencePlayBackwards) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "182 85";
         extent = "22 15";
         minExtent = "8 2";
         visible = "1";
         command = "objectViewerGUI.setSeqPlay(2);";
         text = "Button";
         groupNum = "-1";
         buttonType = "ToggleButton";
         bitmap = "./PlayBackSml";
         useInactiveBitmap = "0";
         tooltipprofile = "TooltipProfile";
         tooltip = "Play Current Animation Sequence Backwards";
      };
      new GuiAnimSliderCtrl(TWSequenceTimeSlider) {
         profile = "GuiAnimSliderProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "170 105";
         extent = "100 15";
         minExtent = "8 2";
         visible = "1";
         command = "TWSequenceTimeSlider.clicked();";
         altCommand = "TWSequenceTimeSlider.dragged();";
         range = "0.000000 1.000000";
         ticks = "9";
         value = "0";
         thumbsize = "16 8";
         miniSlider = "1";
         coloredSlider = "0";
      };
   };
   new GuiWindowCtrl(ShapeWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "106 46";
      extent = "580 403";
      minExtent = "250 150";
      visible = "0";
      text = "Shape Properties";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "dispShapeProperties.setValue(0); objectViewerGUI.toggleShapeWindow();";

      new GuiControl(SPTreeCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "width";
         vertSizing = "height";
         position = "0 50";
         extent = "573 343";
         minExtent = "8 2";
         visible = "0";

         new GuiScrollCtrl(SPShapeTreeViewScroll) {
            profile = "GuiScrollProfile";
            horizSizing = "width";
            vertSizing = "height";
            position = "5 20";
            extent = "567 300";
            minExtent = "8 2";
            visible = "1";
            willFirstRespond = "1";
            hScrollBar = "dynamic";
            vScrollBar = "alwaysOn";
            constantThumbHeight = "0";
            childMargin = "0 0";

            new GuiTreeCtrl(SPShapeTreeView) {
               profile = "GuiShapeTreeProfile";
               horizSizing = "right";
               vertSizing = "bottom";
               position = "2 2";
               extent = "32 66";
               minExtent = "8 2";
               visible = "1";
               columns = "0 200";
               resizableColumns = "1";
               clipColumns = "1";
               allowMultipleSelections = "0";
               recurseSets = "0";
               dirty = "0";
            };
         };
         new GuiHeaderCtrl(SPShapeTreeHeader) {
            profile = "GuiMenuBarProfile";
            horizSizing = "width";
            vertSizing = "bottom";
            position = "5 0";
            extent = "547 20";
            minExtent = "8 2";
            visible = "1";
            columns = "0 200";
            columnHeaders = "Entity Comments";
            resizableColumns = "1";
         };
         new GuiButtonCtrl(SPTreeExpandAllButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "5 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "SPShapeTreeView.expandAllEntries();";
            text = "Expand All";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Fully Expand the Tree View";
         };
         new GuiButtonCtrl(SPTreeCollapseAllButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "115 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "SPShapeTreeView.collapseAllEntries();";
            text = "Collapse All";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Collapse All Items in the Tree View";
         };
         new GuiCheckBoxCtrl(SPTreeIncludePrimitivesCheck) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "225 328";
            extent = "140 15";
            minExtent = "8 2";
            visible = "1";
            variable = "$SPShapeTreeViewPrimitives";
            command = "ShapeWindow.includeSPTreePrimitives();";
            text = "Include Mesh Primitives";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Include Mesh Primitives in Tree View";
         };
      };
      new GuiControl(SPTSDumpCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "width";
         vertSizing = "height";
         position = "0 50";
         extent = "573 343";
         minExtent = "8 2";
         visible = "0";

         new GuiScrollCtrl() {
            profile = "GuiScrollProfile";
            horizSizing = "width";
            vertSizing = "height";
            position = "5 25";
            extent = "567 293";
            minExtent = "8 2";
            visible = "1";
            willFirstRespond = "1";
            hScrollBar = "alwaysOff";
            vScrollBar = "alwaysOn";
            constantThumbHeight = "0";
            childMargin = "0 0";

            new GuiMLTextCtrl(SPTextCtrl) {
               profile = "GuiMLTextProfile";
               horizSizing = "right";
               vertSizing = "bottom";
               position = "2 2";
               extent = "465 14";
               minExtent = "8 2";
               visible = "1";
               lineSpacing = "2";
               allowColorChars = "0";
               maxChars = "-1";
            };
         };
         new GuiMLTextCtrl() {
            profile = "GuiMLTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 7";
            extent = "102 14";
            minExtent = "8 2";
            visible = "1";
            lineSpacing = "2";
            allowColorChars = "0";
            maxChars = "-1";
            text = "Three Space Dump:";
         };
         new GuiButtonCtrl(SPRefreshButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "5 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "ShapeWindow.refresh();";
            text = "Refresh";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Recreate the Text Structure of the Current Object using Torque's Standard tsDump Routine";
         };
         new GuiButtonCtrl(SPExportButton) {
            profile = "GuiButtonProfile";
            horizSizing = "left";
            vertSizing = "top";
            position = "472 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "ShapeWindow.export();";
            text = "Export";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Save the Currently Displayed Text Structure";
         };
      };
      new GuiControl(SPRenderingCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "width";
         vertSizing = "height";
         position = "0 50";
         extent = "573 343";
         minExtent = "8 2";
         visible = "1";

         new GuiScrollCtrl(SPRenderingTreeViewScroll) {
            profile = "GuiScrollProfile";
            horizSizing = "width";
            vertSizing = "height";
            position = "5 40";
            extent = "567 280";
            minExtent = "8 2";
            visible = "1";
            willFirstRespond = "1";
            hScrollBar = "dynamic";
            vScrollBar = "alwaysOn";
            constantThumbHeight = "0";
            childMargin = "0 0";

            new GuiTreeCtrl(SPRenderingTreeView) {
               profile = "GuiShapeTreeProfile";
               horizSizing = "right";
               vertSizing = "bottom";
               position = "2 2";
               extent = "32 66";
               minExtent = "8 2";
               visible = "1";
               columns = "0 200";
               resizableColumns = "1";
               clipColumns = "1";
               allowMultipleSelections = "0";
               recurseSets = "0";
               dirty = "0";
            };
         };
         new GuiHeaderCtrl(SPRenderingTreeHeader) {
            profile = "GuiMenuBarProfile";
            horizSizing = "width";
            vertSizing = "bottom";
            position = "5 20";
            extent = "547 20";
            minExtent = "8 2";
            visible = "1";
            columns = "0 200";
            columnHeaders = "Entity Comments";
            resizableColumns = "1";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "5 2";
            extent = "188 18";
            minExtent = "8 2";
            visible = "1";
            text = "TSShapeInstance Rendering Simulation";
            maxLength = "255";
         };
         new GuiCheckBoxCtrl(SPRenderingTreeIncludePrimitivesCheck) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "225 328";
            extent = "140 15";
            minExtent = "8 2";
            visible = "1";
            variable = "$SPRenderingTreeViewPrimitives";
            command = "ShapeWindow.includeSPRenderingTreePrimitives();";
            text = "Include Mesh Primitives";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Include Mesh Primitives in Tree View";
         };
         new GuiButtonCtrl(SPRenderingTreeExpandAllButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "5 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "SPRenderingTreeView.expandAllEntries();";
            text = "Expand All";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Fully Expand the Tree View";
         };
         new GuiButtonCtrl(SPRenderingTreeCollapseAllButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "top";
            position = "115 328";
            extent = "100 15";
            minExtent = "8 2";
            visible = "1";
            command = "SPRenderingTreeView.collapseAllEntries();";
            text = "Collapse All";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Collapse All Items in the Tree View";
         };
      };
      new GuiTabCtrl(SPTabs) {
         profile = "GuiTabProfileGreen";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "5 30";
         extent = "282 20";
         minExtent = "8 2";
         visible = "1";
         variable = "pref::DTSExporter::spTabChoice";
         command = "SPTabs.select();";
         tabText = "Tree TSDump Rendering";
         textMargin = "4 2";
      };
      new GuiControl() {
         profile = "GuiBorderProfile";
         horizSizing = "width";
         vertSizing = "bottom";
         position = "5 48";
         extent = "570 3";
         minExtent = "8 2";
         visible = "1";
      };
   };
   new GuiWindowCtrl(LightPropertiesWindow) {
      profile = "GuiWindowProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "108 40";
      extent = "187 341";
      minExtent = "8 2";
      visible = "0";
      text = "Light Properties";
      maxLength = "255";
      resizeWidth = "0";
      resizeHeight = "0";
      canMove = "1";
      canClose = "1";
      canMinimize = "1";
      canMaximize = "1";
      minSize = "50 50";
      closeCommand = "lightPropertiesButton.setValue(0); objectViewerGUI.toggleLPWindow();";

      new GuiControl(LPLightsTabCanvas) {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "0 25";
         extent = "187 320";
         minExtent = "8 2";
         visible = "1";

         new GuiCheckBoxCtrl(DPEnableLights) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 5";
            extent = "140 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::enableLights";
            command = "objectViewerGUI.setLightsState();";
            text = "Enable Lights";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Toggle Directional Lighting";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 29";
            extent = "68 18";
            minExtent = "8 2";
            visible = "1";
            text = "Ambient Light:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPAmbientColorPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "91 30";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Custom";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
               addCustom = "1";
            tooltipprofile = "TooltipProfile";
            tooltip = "Ambient Light Color Selection Popup (Black Disables Ambient Light)...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 52";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "R:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPAmbientRed) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 53";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomAmbientLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Ambient Light Custom Color Red Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 74";
            extent = "11 18";
            minExtent = "8 2";
            visible = "1";
            text = "G:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPAmbientGreen) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 75";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomAmbientLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Ambient Light Custom Color Green Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 96";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "B:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPAmbientBlue) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 97";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomAmbientLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Ambient Light Custom Color Blue Component";
         };
         new GuiColouredBox(DPAmbientColor) {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "119 53";
            extent = "62 62";
            minExtent = "8 2";
            visible = "1";
            color = "120 120 120 255";
            color2 = "0 0 0 255";
            opaque = "1";
            gradientDir = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Current Ambient Light Custom Color";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 124";
            extent = "57 18";
            minExtent = "8 2";
            visible = "1";
            text = "Direct Light:";
            maxLength = "255";
         };
         new GuiPopUpMenuCtrl(DPDirectColorPopup) {
            profile = "GuiPopUpMenuProfileGreen";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "91 125";
            extent = "90 18";
            minExtent = "8 2";
            visible = "1";
            text = "Custom";
            maxLength = "255";
            maxPopupHeight = "200";
            sbUsesNAColor = "1";
            reverseTextList = "0";
            bitmapBounds = "16 16";
               addCustom = "1";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light Color Selection Popup...";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 147";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "R:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPDirectRed) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 148";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomDirectLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light Custom Color Red Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 169";
            extent = "11 18";
            minExtent = "8 2";
            visible = "1";
            text = "G:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPDirectGreen) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 170";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomDirectLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light Custom Color Green Component";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "41 191";
            extent = "10 18";
            minExtent = "8 2";
            visible = "1";
            text = "B:";
            maxLength = "255";
         };
         new GuiTextEditCtrl(DPDirectBlue) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "57 192";
            extent = "40 18";
            minExtent = "8 2";
            visible = "0";
            command = "dplSetCustomDirectLightColor();";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light Custom Color Blue Component";
         };
         new GuiColouredBox(DPDirectColor) {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "119 148";
            extent = "62 62";
            minExtent = "8 2";
            visible = "1";
            color = "120 120 120 255";
            color2 = "0 0 0 255";
            opaque = "1";
            gradientDir = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Current Directional Light Custom Color";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 220";
            extent = "109 18";
            minExtent = "8 2";
            visible = "1";
            text = "Light Display Distance:";
            maxLength = "255";
            tooltipprofile = "TooltipProfile";
            tooltip = "Distance from Center of Object as a Multiplier of the Object's Radius Used for Directional Light's Position";
         };
         new GuiTextEditCtrl(DPLightDisplayDistEdit) {
            profile = "GuiTextEditProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "134 220";
            extent = "32 18";
            minExtent = "8 2";
            visible = "0";
            command = "DPLightDisplayDistEdit.onSelect();";
            text = "2.0";
            maxLength = "255";
            historySize = "0";
            password = "0";
            tabComplete = "0";
            sinkAllKeyEvents = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Distance from Center of Object as a Multiplier of the Object's Radius Used to Directional Light's Position";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "170 220";
            extent = "11 18";
            minExtent = "8 2";
            visible = "1";
            text = "* r";
            maxLength = "255";
         };
         new GuiTextCtrl() {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 240";
            extent = "57 18";
            minExtent = "8 2";
            visible = "1";
            text = "Light Angle:";
            maxLength = "255";
         };
         new GuiControl() {
            profile = "GuiAxisGrayProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 260";
            extent = "22 18";
            minExtent = "8 2";
            visible = "1";

            new GuiTextCtrl() {
               profile = "GuiTextProfile";
               horizSizing = "right";
               vertSizing = "bottom";
               position = "0 0";
               extent = "22 18";
               minExtent = "8 2";
               visible = "1";
               text = "  H : ";
               maxLength = "255";
               tooltipprofile = "TooltipProfile";
               tooltip = "Directional Light's Current Heading (Z-Axis) Angle";
            };
         };
         new GuiControl() {
            profile = "GuiAxisGrayProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "80 260";
            extent = "22 18";
            minExtent = "8 2";
            visible = "1";

            new GuiTextCtrl() {
               profile = "GuiTextProfile";
               horizSizing = "right";
               vertSizing = "bottom";
               position = "0 0";
               extent = "21 18";
               minExtent = "8 2";
               visible = "1";
               text = "  P : ";
               maxLength = "255";
               tooltipprofile = "TooltipProfile";
               tooltip = "Directional Light's Current Pitch (X-Axis) Angle";
            };
         };
         new GuiTextCtrl(DPLightAngleZ) {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "36 260";
            extent = "18 18";
            minExtent = "8 2";
            visible = "1";
            text = "0.000";
            maxLength = "255";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light's Current Heading (Z-Axis) Angle";
         };
         new GuiTextCtrl(DPLightAngleX) {
            profile = "GuiTextProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "106 260";
            extent = "12 18";
            minExtent = "8 2";
            visible = "1";
            text = "0.000";
            maxLength = "255";
            tooltipprofile = "TooltipProfile";
            tooltip = "Directional Light's Current Pitch (X-Axis) Angle";
         };
         new GuiButtonCtrl(DPLightAngleSetButton) {
            profile = "GuiButtonProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "151 260";
            extent = "30 15";
            minExtent = "8 2";
            visible = "1";
            command = "dplSetLightAngleDialogOpen();";
            text = "SET";
            groupNum = "-1";
            buttonType = "PushButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Manually Set Directional Light's Heading and Pitch";
         };
         new GuiControl() {
            profile = "GuiBorderProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "4 285";
            extent = "179 3";
            minExtent = "8 2";
            visible = "1";
         };
         new GuiCheckBoxCtrl(DPEnableSGLightingPack) {
            profile = "GuiCheckBoxProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "10 290";
            extent = "173 20";
            minExtent = "8 2";
            visible = "1";
            variable = "pref::DTSExporter::SGLightingPack";
            command = "objectViewerGUI.setLightingPackState();";
            text = "Synapse Gaming Lighting Pack";
            groupNum = "-1";
            buttonType = "ToggleButton";
            tooltipprofile = "TooltipProfile";
            tooltip = "Toggle the Synapse Gaming Lighting Pack";
         };
         new GuiDragButtonCtrl(DPAmbientRedArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 54";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomAmbientLightColor(DPAmbientRedArrows,DPAmbientRed);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Ambient Light Custom Color Red Component";
         };
         new GuiDragButtonCtrl(DPAmbientGreenArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 76";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomAmbientLightColor(DPAmbientGreenArrows,DPAmbientGreen);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Ambient Light Custom Color Green Component";
         };
         new GuiDragButtonCtrl(DPAmbientBlueArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 98";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomAmbientLightColor(DPAmbientBlueArrows,DPAmbientBlue);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Ambient Light Custom Color Blue Component";
         };
         new GuiDragButtonCtrl(DPDirectRedArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 149";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomDirectLightColor(DPDirectRedArrows,DPDirectRed);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Directional Light Custom Color Red Component";
         };
         new GuiDragButtonCtrl(DPDirectGreenArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 171";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomDirectLightColor(DPDirectGreenArrows,DPDirectGreen);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Directional Light Custom Color Green Component";
         };
         new GuiDragButtonCtrl(DPDirectBlueArrows) {
            profile = "GuiDefaultProfile";
            horizSizing = "left";
            vertSizing = "bottom";
            position = "100 193";
            extent = "16 16";
            minExtent = "8 2";
            visible = "1";
            altCommand = "dplDragCustomDirectLightColor(DPDirectBlueArrows,DPDirectBlue);";
            text = "Button";
            groupNum = "-1";
            buttonType = "PushButton";
            bitmap = "./LeftRightArrows";
            useInactiveBitmap = "0";
            mousedelta = "0 0";
            modifier = "0";
            tooltipprofile = "TooltipProfile";
            tooltip = "Hold and Drag to Modify Directional Light Custom Color Blue Component";
         };
      };
   };
};
//--- OBJECT WRITE END ---
